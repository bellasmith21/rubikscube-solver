var move=0;
const cube = [];
var shuffleMoves = [[1, 3, 4, 17, 3, 16, 14, 14, 11, 4, 9, 0, 6, 1, 16, 0, 17, 11, 12, 14],
[7, 9, 0, 10, 13, 17, 15, 17, 0, 1, 7, 14, 12, 2, 13, 0, 5, 5, 6, 13],
[16, 14, 14, 17, 13, 13, 4, 13, 16, 2, 13, 15, 12, 12, 2, 2, 11, 0, 13, 0],
[2, 0, 5, 13, 13, 9, 4, 14, 6, 0, 17, 4, 15, 8, 8, 7, 8, 5, 10, 4],
[6, 17, 14, 4, 0, 15, 1, 14, 13, 0, 8, 4, 3, 16, 1, 14, 11, 6, 15, 17],
[6, 4, 17, 4, 4, 16, 11, 10, 1, 11, 10, 6, 9, 9, 11, 11, 16, 3, 4, 3],
[7, 7, 0, 15, 1, 16, 0, 9, 5, 9, 16, 16, 8, 15, 6, 17, 0, 10, 6, 12],
[17, 8, 6, 2, 1, 6, 0, 14, 3, 1, 13, 7, 10, 16, 3, 0, 3, 2, 12, 6],
[3, 10, 10, 16, 12, 3, 16, 1, 9, 7, 11, 0, 15, 16, 11, 12, 0, 12, 7, 4],
[15, 11, 10, 7, 16, 6, 4, 12, 4, 4, 6, 12, 9, 15, 6, 4, 10, 17, 4, 0],
[10, 9, 8, 2, 10, 9, 15, 7, 2, 10, 5, 14, 17, 3, 12, 13, 3, 6, 13, 3],
[0, 13, 5, 14, 17, 2, 17, 13, 4, 9, 8, 0, 9, 2, 7, 6, 4, 12, 11, 15],
[10, 5, 13, 16, 15, 1, 14, 3, 1, 9, 10, 10, 16, 10, 6, 7, 1, 1, 11, 5],
[13, 6, 9, 14, 9, 14, 6, 11, 13, 1, 12, 13, 16, 7, 4, 16, 8, 14, 0, 16],
[0, 13, 6, 15, 0, 6, 11, 2, 12, 6, 7, 17, 11, 9, 8, 14, 17, 0, 4, 6],
[1, 6, 10, 4, 17, 10, 7, 8, 1, 7, 0, 16, 8, 17, 16, 15, 4, 9, 1, 13],
[14, 9, 12, 0, 10, 17, 8, 16, 10, 13, 11, 17, 6, 5, 3, 9, 9, 1, 15, 7],
[2, 13, 5, 10, 7, 16, 7, 11, 1, 7, 6, 0, 6, 14, 7, 9, 12, 9, 1, 16],
[6, 11, 14, 15, 17, 17, 2, 11, 12, 2, 0, 1, 9, 14, 12, 6, 13, 0, 16, 4],
[13, 14, 14, 2, 14, 8, 17, 14, 7, 6, 7, 10, 13, 2, 13, 14, 13, 4, 6, 4],
[1, 16, 9, 1, 16, 5, 3, 1, 15, 5, 6, 7, 16, 3, 3, 10, 8, 17, 12, 13],
[9, 12, 9, 16, 8, 16, 16, 8, 14, 12, 5, 5, 10, 6, 15, 9, 8, 7, 0, 3],
[17, 8, 9, 14, 4, 0, 13, 17, 3, 17, 6, 10, 10, 16, 15, 7, 4, 12, 11, 14],
[1, 8, 4, 2, 2, 11, 14, 3, 11, 1, 1, 7, 7, 17, 7, 7, 7, 14, 11, 16],
[10, 14, 7, 12, 2, 9, 13, 2, 13, 5, 7, 11, 14, 11, 7, 14, 16, 13, 14, 1],
[9, 15, 4, 9, 11, 2, 15, 1, 6, 4, 10, 17, 16, 3, 15, 16, 14, 14, 15, 6],
[1, 12, 13, 7, 10, 10, 2, 9, 11, 3, 16, 9, 3, 3, 5, 7, 14, 11, 5, 7]
];
var solutionMoves = [[0, 10, 1, 7, 2, 0, 13, 2, 4, 7, 1, 13, 1, 7, 3, 0, 5, 2, 6, 2, 8, 9, 2, 11, 1, 11, 0, 9, 2, 3, 2, 5, 0, 14, 0, 12, 8, 5, 6, 0, 6, 2, 8, 3, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 11, 8, 9, 0, 9, 2, 11, 6, 1, 12, 9, 5, 17, 12, 15, 11, 3, 14, 2, 3, 12, 8, 17, 3, 15, 14, 6, 5, 1, 6, 9, 0, 11, 2, 8, 10, 0, 11, 0, 11, 2, 9, 2, 10, 15, 2, 11, 0, 9, 17, 1],
[2, 13, 17, 8, 16, 9, 7, 1, 13, 1, 7, 5, 0, 3, 0, 9, 2, 11, 2, 12, 2, 14, 0, 14, 0, 12, 6, 3, 11, 17, 6, 15, 5, 9, 8, 5, 14, 3, 0, 3, 2, 5, 12, 2, 11, 8, 9, 0, 9, 2, 11, 6, 0, 12, 9, 5, 17, 12, 15, 11, 3, 14, 2, 5, 14, 3, 0, 3, 2, 5, 12, 1, 3, 8, 5, 2, 3, 0, 6, 2, 5, 2, 9, 0, 11, 2, 11, 6, 10, 2, 11, 2, 9, 0, 11, 8, 1],
[2, 13, 10, 15, 11, 0, 2, 10, 0, 7, 14, 2, 12, 0, 6, 2, 8, 12, 0, 14, 0, 9, 2, 10, 2, 9, 1, 12, 2, 14, 1, 3, 2, 5, 8, 5, 6, 0, 6, 2, 8, 3, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 9, 6, 14, 17, 9, 15, 8, 12, 11, 0, 11, 8, 9, 0, 9, 2, 11, 6, 14, 11, 12, 0, 12, 2, 14, 9, 1, 12, 9, 5, 17, 12, 15, 11, 3, 14, 5, 14, 3, 0, 3, 2, 5, 12, 1, 9, 0, 11, 0, 9, 1, 11, 0, 9, 0, 11, 0, 9, 0, 11, 8, 9, 0, 11, 2, 11, 6, 10, 2, 11, 1, 9, 2, 11, 2],
[5, 12, 3, 17, 8, 17, 11, 4, 1, 10, 1, 4, 11, 2, 9, 6, 2, 8, 0, 9, 2, 11, 0, 8, 0, 6, 2, 11, 0, 9, 2, 3, 2, 5, 0, 14, 0, 12, 5, 14, 3, 0, 3, 2, 5, 12, 8, 5, 6, 0, 6, 2, 8, 4, 12, 8, 17, 3, 15, 14, 6, 5, 2, 12, 0, 3, 2, 5, 0, 3, 2, 5, 14, 1, 11, 0, 11, 2, 14, 11, 13, 2, 14, 0, 14, 9, 12, 9, 2],
[15, 12, 17, 8, 4, 1, 10, 1, 3, 2, 3, 1, 6, 2, 8, 1, 9, 2, 11, 0, 8, 0, 6, 14, 2, 12, 2, 12, 2, 14, 2, 14, 0, 12, 2, 8, 5, 6, 0, 6, 2, 8, 3, 1, 11, 8, 9, 0, 9, 2, 11, 6, 5, 14, 3, 0, 3, 2, 5, 12, 2, 12, 9, 5, 17, 12, 15, 11, 3, 14, 5, 14, 3, 0, 3, 2, 5, 12, 1, 3, 12, 8, 17, 3, 15, 14, 6, 5, 0, 9, 1, 10, 6, 9, 8, 1, 11, 6, 9, 8, 2, 11, 0, 11, 2, 14, 11, 13, 2, 14, 0, 14, 9, 12, 9, 0],
[13, 3, 14, 4, 7, 1, 13, 1, 7, 10, 2, 13, 0, 10, 2, 5, 0, 3, 2, 6, 2, 7, 0, 6, 14, 2, 12, 1, 3, 2, 5, 8, 5, 6, 0, 6, 2, 8, 3, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 1, 9, 6, 14, 17, 9, 15, 8, 12, 11, 5, 14, 3, 0, 3, 2, 5, 12, 1, 14, 11, 12, 0, 12, 2, 14, 9, 5, 14, 3, 0, 3, 2, 5, 12, 1, 3, 12, 8, 17, 3, 15, 14, 6, 5, 2, 3, 6, 11, 6, 9, 7, 5, 0, 10, 0, 9, 0, 11, 2, 11, 2, 11, 0, 11, 0],
[15, 3, 16, 6, 17, 14, 17, 4, 1, 10, 1, 4, 7, 2, 10, 0, 7, 5, 0, 3, 0, 9, 2, 11, 3, 0, 5, 0, 12, 2, 14, 1, 14, 0, 12, 2, 8, 5, 6, 0, 6, 2, 8, 3, 14, 11, 12, 0, 12, 2, 14, 9, 1, 11, 8, 9, 0, 9, 2, 11, 6, 5, 14, 3, 0, 3, 2, 5, 12, 1, 14, 11, 12, 0, 12, 2, 14, 9, 2, 3, 12, 8, 17, 3, 15, 14, 6, 5, 2, 11, 2, 8, 0, 6, 1, 9, 1, 11, 6, 9, 0, 11, 2, 11, 8, 10, 1],
[2, 13, 11, 8, 15, 10, 6, 9, 4, 0, 13, 2, 4, 7, 2, 10, 0, 7, 0, 5, 0, 3, 2, 6, 2, 8, 3, 0, 5, 8, 0, 6, 1, 12, 2, 14, 0, 11, 0, 9, 3, 2, 5, 0, 14, 0, 12, 2, 6, 3, 11, 17, 6, 15, 5, 9, 8, 9, 6, 14, 17, 9, 15, 8, 12, 11, 1, 12, 9, 5, 17, 12, 15, 11, 3, 14, 3, 12, 8, 17, 3, 15, 14, 6, 5, 9, 0, 11, 2, 11, 6, 9, 8, 2, 9, 2, 11, 2, 9, 0, 9, 15, 11, 2, 9, 17, 11, 1, 11, 1],
[15, 3, 9, 14, 17, 6, 15, 6, 2, 10, 0, 7, 9, 0, 11, 2, 5, 0, 3, 9, 0, 11, 1, 8, 0, 6, 14, 2, 12, 2, 12, 2, 14, 1, 14, 0, 11, 12, 0, 12, 2, 14, 9, 6, 3, 11, 17, 6, 15, 5, 9, 8, 5, 14, 3, 0, 3, 2, 5, 12, 9, 6, 14, 17, 9, 15, 8, 12, 11, 5, 14, 3, 0, 3, 2, 5, 12, 2, 12, 9, 5, 17, 12, 15, 11, 3, 14, 0, 5, 14, 3, 0, 3, 2, 5, 12, 1, 11, 6, 9, 0, 9, 2, 10, 8, 10, 2, 11, 0, 9, 0, 11, 0, 8, 2, 6, 10, 15, 14, 0, 12, 2, 12, 17, 10, 0],
[13, 1, 13, 9, 17, 6, 15, 12, 3, 14, 0, 13, 2, 4, 2, 6, 2, 8, 1, 9, 2, 11, 12, 2, 14, 0, 11, 0, 9, 3, 2, 5, 0, 14, 0, 12, 2, 6, 3, 11, 17, 6, 15, 5, 9, 8, 2, 9, 6, 14, 17, 9, 15, 8, 12, 11, 1, 14, 11, 12, 0, 12, 2, 14, 9, 1, 5, 14, 3, 0, 3, 2, 5, 12, 1, 5, 14, 3, 2, 11, 0, 9, 2, 11, 0, 9, 5, 12, 3, 9, 2, 9, 0, 9, 0, 9, 2, 11, 2, 10, 2],
[13, 5, 17, 8, 5, 2, 7, 0, 3, 0, 3, 1, 9, 2, 11, 0, 8, 0, 6, 2, 12, 2, 14, 0, 11, 0, 9, 2, 3, 2, 5, 0, 14, 0, 12, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 14, 11, 12, 0, 12, 2, 14, 9, 0, 5, 14, 3, 0, 3, 2, 5, 12, 2, 9, 1, 10, 6, 9, 8, 9, 1, 9, 2, 9, 2, 9, 0, 11, 0, 10, 17, 0, 9, 2, 11, 15],
[15, 3, 12, 17, 3, 0, 13, 2, 4, 7, 1, 13, 1, 7, 10, 2, 13, 0, 10, 2, 6, 2, 8, 1, 9, 2, 11, 0, 8, 0, 6, 12, 2, 14, 0, 11, 0, 9, 0, 3, 2, 5, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 0, 11, 8, 9, 0, 9, 2, 11, 6, 0, 12, 9, 5, 17, 12, 15, 11, 3, 14, 5, 14, 3, 0, 3, 2, 5, 12, 0, 5, 12, 4, 8, 4, 14, 4, 6, 5, 0, 9, 0, 11, 2, 11, 6, 10, 2, 11, 2, 9, 0, 11, 8, 2],
[13, 11, 8, 15, 11, 4, 0, 13, 2, 4, 2, 6, 2, 8, 12, 0, 14, 0, 9, 2, 11, 14, 2, 12, 2, 12, 2, 14, 3, 2, 5, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 14, 11, 12, 0, 12, 2, 14, 9, 1, 11, 8, 9, 0, 9, 2, 11, 6, 1, 14, 11, 12, 0, 12, 2, 14, 9, 0, 5, 14, 3, 0, 3, 2, 5, 12, 11, 2, 6, 0, 9, 2, 11, 8, 9, 1, 6, 9, 2, 11, 2, 9, 0, 11, 8, 9, 0, 11, 2, 11, 6, 9, 8, 2],
[9, 14, 11, 17, 14, 15, 4, 1, 10, 1, 4, 10, 2, 13, 0, 10, 6, 0, 8, 1, 5, 0, 3, 8, 2, 6, 1, 9, 2, 11, 14, 2, 12, 2, 12, 2, 14, 3, 2, 5, 0, 14, 0, 12, 5, 14, 3, 0, 3, 2, 5, 12, 0, 6, 3, 11, 17, 6, 15, 5, 9, 8, 0, 9, 6, 14, 17, 9, 15, 8, 12, 11, 2, 14, 11, 12, 0, 12, 2, 14, 9, 1, 3, 12, 8, 17, 3, 15, 14, 6, 5, 0, 11, 6, 9, 0, 9, 2, 10, 8, 10, 2, 11, 0, 9, 0, 11, 0, 9, 2, 11, 2, 9, 0, 9, 15, 11, 2, 9, 17, 11, 1, 11, 1],
[6, 3, 0, 13, 2, 4, 0, 5, 0, 3, 11, 2, 9, 2, 9, 2, 11, 1, 12, 2, 14, 0, 11, 0, 9, 3, 2, 5, 0, 14, 0, 12, 5, 14, 3, 0, 3, 2, 5, 12, 0, 6, 3, 11, 17, 6, 15, 5, 9, 8, 9, 6, 14, 17, 9, 15, 8, 12, 11, 0, 11, 8, 9, 0, 9, 2, 11, 6, 12, 9, 5, 17, 12, 15, 11, 3, 14, 2, 5, 14, 3, 0, 3, 2, 5, 12, 0, 12, 0, 3, 2, 5, 14, 2, 11, 2, 8, 9, 0, 11, 2, 11, 6, 10, 2, 11, 2, 9, 0, 11, 0, 9, 0],
[13, 1, 13, 17, 8, 15, 8, 17, 3, 14, 4, 0, 13, 2, 4, 10, 2, 13, 0, 10, 6, 2, 7, 0, 6, 2, 12, 2, 14, 0, 11, 0, 9, 3, 2, 5, 11, 8, 9, 0, 9, 2, 11, 6, 2, 6, 3, 11, 17, 6, 15, 5, 9, 8, 14, 11, 12, 0, 12, 2, 14, 9, 2, 9, 6, 14, 17, 9, 15, 8, 12, 11, 0, 12, 9, 5, 17, 12, 15, 11, 3, 14, 0, 5, 14, 3, 0, 3, 2, 5, 12, 3, 6, 11, 6, 9, 7, 5, 2, 11, 0, 5, 1, 9, 2, 11, 1, 9, 3],
[13, 1, 13, 17, 6, 5, 1, 10, 1, 4, 7, 2, 10, 0, 7, 5, 2, 3, 1, 6, 2, 8, 0, 8, 0, 6, 11, 0, 9, 1, 14, 0, 12, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 1, 9, 6, 14, 17, 9, 15, 8, 12, 11, 2, 14, 11, 12, 0, 12, 2, 14, 9, 2, 9, 0, 11, 2, 9, 2, 11, 8, 2, 6, 9, 0, 11, 0, 10, 13, 9, 6, 11, 13, 9, 8, 9, 0],
[0, 10, 8, 17, 3, 16, 8, 17, 3, 7, 2, 10, 0, 7, 0, 5, 0, 3, 2, 9, 2, 11, 1, 11, 0, 9, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 14, 11, 12, 0, 12, 2, 14, 9, 1, 11, 8, 9, 0, 9, 2, 11, 6, 2, 14, 11, 12, 0, 12, 2, 14, 9, 1, 5, 14, 3, 0, 3, 2, 5, 12, 1, 17, 9, 0, 11, 2, 15, 10, 2, 9, 2, 11, 0, 11, 0, 10, 2],
[2, 13, 6, 11, 4, 1, 10, 1, 4, 7, 2, 10, 0, 7, 0, 6, 2, 8, 0, 8, 0, 6, 0, 12, 2, 14, 0, 11, 0, 9, 0, 3, 2, 5, 0, 14, 0, 12, 0, 6, 3, 11, 17, 6, 15, 5, 9, 8, 0, 11, 8, 9, 0, 9, 2, 11, 6, 5, 14, 3, 0, 3, 2, 5, 12, 2, 12, 9, 5, 17, 12, 15, 11, 3, 14, 1, 3, 12, 8, 17, 3, 15, 14, 6, 5, 2, 10, 15, 11, 1, 9, 17, 11, 1, 0, 11, 2, 11, 6, 10, 2, 11, 2, 9, 0, 11, 8, 2],
[2, 10, 16, 12, 17, 8, 17, 4, 0, 13, 2, 4, 10, 2, 13, 0, 10, 1, 5, 0, 3, 0, 9, 2, 11, 0, 12, 2, 14, 3, 0, 5, 1, 14, 0, 12, 6, 3, 11, 17, 6, 15, 5, 9, 8, 2, 11, 8, 9, 0, 9, 2, 11, 6, 14, 11, 12, 0, 12, 2, 14, 9, 2, 5, 14, 3, 0, 3, 2, 5, 12, 3, 10, 8, 9, 8, 11, 7, 9, 8, 5, 9, 0, 9, 2, 11, 2, 9, 0, 9, 15, 11, 2, 9, 17, 11, 1, 11, 1],
[0, 13, 16, 3, 12, 17, 6, 15, 9, 0, 11, 2, 5, 0, 3, 11, 2, 9, 2, 9, 2, 11, 12, 0, 14, 1, 11, 0, 9, 1, 14, 0, 12, 0, 6, 3, 11, 17, 6, 15, 5, 9, 8, 5, 14, 3, 0, 3, 2, 5, 12, 2, 11, 8, 9, 0, 9, 2, 11, 6, 5, 14, 3, 0, 3, 2, 5, 12, 2, 12, 9, 5, 17, 12, 15, 11, 3, 14, 2, 6, 9, 2, 11, 2, 9, 0, 11, 8, 0, 9, 0, 11, 0, 9, 0, 11, 8, 9, 0, 11, 2, 11, 6, 10, 2, 11, 1, 9, 2, 11, 2],
[14, 9, 12, 15, 9, 17, 3, 2, 7, 0, 4, 10, 2, 13, 0, 10, 5, 0, 3, 0, 9, 2, 10, 0, 9, 0, 3, 2, 5, 0, 14, 0, 12, 0, 8, 5, 6, 0, 6, 2, 8, 3, 14, 11, 12, 0, 12, 2, 14, 9, 2, 9, 6, 14, 17, 9, 15, 8, 12, 11, 5, 14, 3, 0, 3, 2, 5, 12, 1, 14, 11, 12, 0, 12, 2, 14, 9, 3, 12, 8, 17, 3, 15, 14, 6, 5, 0, 6, 9, 0, 11, 2, 8, 12, 0, 3, 2, 5, 14, 2, 11, 0, 11, 2, 14, 11, 13, 2, 14, 0, 14, 9, 12, 9, 2],
[2, 6, 11, 8, 16, 14, 16, 12, 3, 14, 0, 13, 2, 4, 10, 2, 13, 0, 10, 1, 6, 2, 8, 2, 8, 0, 6, 1, 11, 0, 9, 1, 3, 2, 5, 1, 8, 5, 6, 0, 6, 2, 8, 14, 3, 0, 3, 2, 5, 12, 9, 6, 14, 17, 9, 15, 8, 12, 11, 5, 14, 3, 0, 3, 2, 5, 12, 1, 14, 11, 12, 0, 12, 2, 14, 9, 3, 12, 8, 17, 3, 15, 14, 6, 5, 1, 5, 13, 9, 12, 11, 12, 3, 0, 11, 1, 9, 1, 11, 6, 9, 0, 11, 2, 11, 8, 10, 2],
[13, 1, 13, 0, 6, 11, 8, 0, 8, 3, 6, 4, 0, 13, 2, 4, 10, 2, 13, 0, 10, 5, 2, 3, 1, 6, 2, 8, 14, 2, 12, 9, 2, 10, 8, 9, 0, 9, 2, 11, 6, 1, 8, 5, 6, 0, 6, 2, 8, 3, 1, 9, 6, 14, 17, 9, 15, 8, 12, 11, 2, 3, 12, 8, 17, 3, 15, 14, 6, 5, 2, 9, 0, 11, 2, 11, 6, 10, 0, 11, 2, 8, 0, 10, 0, 11, 0, 11, 2, 9, 2, 10, 15, 2, 11, 0, 9, 17, 1],
[5, 12, 3, 6, 11, 8, 17, 3, 12, 4, 0, 13, 2, 4, 7, 1, 13, 1, 7, 12, 0, 14, 5, 0, 4, 0, 5, 1, 9, 2, 11, 1, 14, 0, 11, 12, 0, 12, 2, 14, 9, 2, 8, 5, 6, 0, 6, 2, 8, 3, 0, 9, 6, 14, 17, 9, 15, 8, 12, 11, 5, 14, 3, 0, 3, 2, 5, 12, 2, 12, 9, 5, 17, 12, 15, 11, 3, 14, 5, 14, 3, 0, 3, 2, 5, 12, 1, 3, 12, 8, 17, 3, 15, 14, 6, 5, 9, 0, 11, 0, 9, 1, 11, 6, 9, 0, 11, 2, 8, 9, 0, 11, 0, 9, 0, 11, 8, 9, 0, 11, 2, 11, 6, 10, 2, 11, 1, 9, 2, 11],
[2, 13, 9, 17, 6, 3, 1, 10, 1, 4, 7, 2, 10, 0, 7, 3, 0, 5, 2, 6, 2, 8, 1, 8, 0, 6, 14, 2, 12, 2, 12, 2, 14, 3, 2, 5, 8, 5, 6, 0, 6, 2, 8, 3, 1, 6, 3, 11, 17, 6, 15, 5, 9, 8, 11, 8, 9, 0, 9, 2, 11, 6, 14, 11, 12, 0, 12, 2, 14, 9, 1, 12, 9, 5, 17, 12, 15, 11, 3, 14, 1, 11, 6, 9, 0, 11, 8, 9, 6, 2, 8, 1, 11, 2, 8, 9, 0, 11, 2, 11, 6, 10, 2, 11, 2, 9, 0, 11, 0, 9],
[11, 15, 3, 12, 0, 10, 1, 7, 3, 2, 7, 0, 4, 7, 1, 13, 1, 7, 10, 2, 13, 0, 10, 1, 9, 2, 11, 2, 12, 2, 14, 0, 3, 2, 4, 14, 3, 0, 3, 2, 5, 12, 9, 6, 14, 17, 9, 15, 8, 12, 11, 0, 14, 11, 12, 0, 12, 2, 14, 9, 0, 5, 14, 3, 0, 3, 2, 5, 12, 0, 3, 7, 11, 8, 9, 8, 5, 17, 9, 0, 11, 2, 15, 10, 2, 9, 2, 11, 0, 11, 0, 10]
];
var index = -1;

for (var i = 0; i <18; i++) {
	cube[i] = [];
}

function cube_start(){
	move=0;
	for(var i=0; i<18; i++){
		for(var j=0; j<3; j++){
			if(i<3)cube[i][j]='B';
			if(i>=3&&i<6)cube[i][j]='W';
			if(i>=6&&i<9)cube[i][j]='G';
			if(i>=9&&i<12)cube[i][j]='Y';
			if(i>=12&&i<15)cube[i][j]='R';
			if(i>=15&&i<18)cube[i][j]='O';
			draw();
			statrtrotation();
		}
	}
}

function draw(){ 
	for(var i=0; i<18; i++){
		for(var j=0; j<3; j++){
			if(cube[i][j]=='B')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#BAC9EB";
			if(cube[i][j]=='G')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#9BF093";
			if(cube[i][j]=='W')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#EEEEEE";
			if(cube[i][j]=='Y')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#FFF189";
			if(cube[i][j]=='R')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#FFA2A2";
			if(cube[i][j]=='O')document.getElementsByClassName("item_id"+i+j)[0].style.background = "#FFC974";     
		}
	}
}
function MUVE_U(){
	var buffor1=cube[6][0];
	var buffor2=cube[6][1];
	var buffor3=cube[6][2];

	var buffor4=cube[10][0];
	var buffor5=cube[11][2];

	cube[6][0]=cube[17][0];
	cube[6][1]=cube[16][0];
	cube[6][2]=cube[15][0];

	cube[15][0]=cube[2][0];
	cube[16][0]=cube[2][1];
	cube[17][0]=cube[2][2];

	cube[2][0]=cube[14][2];
	cube[2][1]=cube[13][2];
	cube[2][2]=cube[12][2];

	cube[14][2]=buffor3;
	cube[13][2]=buffor2;
	cube[12][2]=buffor1;

	cube[10][0]=cube[11][1];
	cube[11][1]=cube[10][2];
	cube[10][2]=cube[9][1];
	cube[9][1]=buffor4;

	cube[11][2]=cube[9][2];
	cube[9][2]=cube[9][0];
	cube[9][0]=cube[11][0];
	cube[11][0]=buffor5;

	draw();
}

function MUVE_Up(){
	MUVE_U();
	MUVE_U();
	MUVE_U();
}

function MUVE_L(){
	var buffor1=cube[9][2];
	var buffor2=cube[10][2];
	var buffor3=cube[11][2];

	var buffor4=cube[16][0];
	var buffor5=cube[17][0];

	cube[9][2]=cube[6][2];
	cube[10][2]=cube[7][2];
	cube[11][2]=cube[8][2];

	cube[6][2]=cube[3][2];
	cube[7][2]=cube[4][2];
	cube[8][2]=cube[5][2];

	cube[3][2]=cube[0][2];
	cube[4][2]=cube[1][2];
	cube[5][2]=cube[2][2];

	cube[0][2]=buffor1;
	cube[1][2]=buffor2;
	cube[2][2]=buffor3;

	cube[16][0]=cube[17][1];
	cube[17][1]=cube[16][2];
	cube[16][2]=cube[15][1];
	cube[15][1]=buffor4;

	cube[17][0]=cube[17][2];
	cube[17][2]=cube[15][2];
	cube[15][2]=cube[15][0];
	cube[15][0]=buffor5;
	 
	draw();
}

function MUVE_Lp(){
	MUVE_L();
	MUVE_L();
	MUVE_L();
}

function MUVE_Rp(){
	var buffor1=cube[9][0];
	var buffor2=cube[10][0];
	var buffor3=cube[11][0];

	var buffor4=cube[13][2];
	var buffor5=cube[14][2];

	cube[9][0]=cube[6][0];
	cube[10][0]=cube[7][0];
	cube[11][0]=cube[8][0];

	cube[6][0]=cube[3][0];
	cube[7][0]=cube[4][0];
	cube[8][0]=cube[5][0];

	cube[3][0]=cube[0][0];
	cube[4][0]=cube[1][0];
	cube[5][0]=cube[2][0];

	cube[0][0]=buffor1;
	cube[1][0]=buffor2;
	cube[2][0]=buffor3;

	cube[13][2]=cube[14][1];
	cube[14][1]=cube[13][0];
	cube[13][0]=cube[12][1];
	cube[12][1]=buffor4;

	cube[14][2]=cube[14][0];
	cube[14][0]=cube[12][0];
	cube[12][0]=cube[12][2];
	cube[12][2]=buffor5;

	draw();
}

function MUVE_R(){
	MUVE_Rp();
	MUVE_Rp();
	MUVE_Rp();
}

function MUVE_Dp(){
	var buffor1=cube[8][0];
	var buffor2=cube[8][1];
	var buffor3=cube[8][2];

	var buffor4=cube[3][0];
	var buffor5=cube[3][1];

	cube[8][0]=cube[17][2];
	cube[8][1]=cube[16][2];
	cube[8][2]=cube[15][2];

	cube[17][2]=cube[0][2];
	cube[16][2]=cube[0][1];
	cube[15][2]=cube[0][0];

	cube[0][2]=cube[12][0];
	cube[0][1]=cube[13][0];
	cube[0][0]=cube[14][0];

	cube[14][0]=buffor3;
	cube[13][0]=buffor2;
	cube[12][0]=buffor1;

	cube[3][0]=cube[3][2];
	cube[3][2]=cube[5][2];
	cube[5][2]=cube[5][0];
	cube[5][0]=buffor4;

	cube[3][1]=cube[4][2];
	cube[4][2]=cube[5][1];
	cube[5][1]=cube[4][0];
	cube[4][0]=buffor5;

	draw();
}

function MUVE_D(){
	MUVE_Dp();
	MUVE_Dp();
	MUVE_Dp();
}

function MUVE_B(){
	var buffor1=cube[11][0];
	var buffor2=cube[11][1];
	var buffor3=cube[11][2];

	var buffor4=cube[6][0];
	var buffor5=cube[6][1];

	cube[11][0]=cube[14][0];
	cube[11][1]=cube[14][1];
	cube[11][2]=cube[14][2];

	cube[14][2]=cube[3][0];
	cube[14][1]=cube[3][1];
	cube[14][0]=cube[3][2];

	cube[3][0]=cube[17][2];
	cube[3][1]=cube[17][1];
	cube[3][2]=cube[17][0];

	cube[17][0]=buffor1;
	cube[17][1]=buffor2;
	cube[17][2]=buffor3;

	cube[6][0]=cube[8][0];
	cube[8][0]=cube[8][2];
	cube[8][2]=cube[6][2];
	cube[6][2]=buffor4;

	cube[6][1]=cube[7][0];
	cube[7][0]=cube[8][1];
	cube[8][1]=cube[7][2];
	cube[7][2]=buffor5;

	draw();
}
function MUVE_Bp(){
	
	move=move-3;
	console.log(move+"F'");
	MUVE_B();
	MUVE_B();
	MUVE_B();
}

function MUVE_F(){
	var buffor1=cube[9][0];
	var buffor2=cube[9][1];
	var buffor3=cube[9][2];

	var buffor4=cube[2][0];
	var buffor5=cube[2][1];

	cube[9][0]=cube[15][0];
	cube[9][1]=cube[15][1];
	cube[9][2]=cube[15][2];

	cube[15][0]=cube[5][2];
	cube[15][1]=cube[5][1];
	cube[15][2]=cube[5][0];

	cube[5][2]=cube[12][0];
	cube[5][1]=cube[12][1];
	cube[5][0]=cube[12][2];

	cube[12][0]=buffor1;
	cube[12][1]=buffor2;
	cube[12][2]=buffor3;

	cube[2][0]=cube[2][2];
	cube[2][2]=cube[0][2];
	cube[0][2]=cube[0][0];
	cube[0][0]=buffor4;

	cube[2][1]=cube[1][2];
	cube[1][2]=cube[0][1];
	cube[0][1]=cube[1][0];
	cube[1][0]=buffor5;

	draw();
}

function MUVE_Fp(){
	MUVE_F();
	MUVE_F();
	MUVE_F();
}


function shuffle(){
	if(index > -1){
		cube_start();
	}
		
	index = Math.floor(Math.random() * Math.floor(27));
	var shuffd = shuffleMoves[index];
	
	for(var i=0; i<shuffd.length; i++){
		if(shuffd[i]==0)MUVE_U();
		if(shuffd[i]==1){MUVE_U(); MUVE_U();};
		if(shuffd[i]==2)MUVE_Up();

		if(shuffd[i]==9)MUVE_R();
		if(shuffd[i]==10){MUVE_R(); MUVE_R();}
		if(shuffd[i]==11)MUVE_Rp();

		if(shuffd[i]==3)MUVE_L();
		if(shuffd[i]==4){MUVE_L(); MUVE_L();}
		if(shuffd[i]==5)MUVE_Lp();

		if(shuffd[i]==6)MUVE_F();
		if(shuffd[i]==7){MUVE_F(); MUVE_F();}
		if(shuffd[i]==8)MUVE_Fp();

		if(shuffd[i]==12)MUVE_B();
		if(shuffd[i]==13){MUVE_B(); MUVE_B();}
		if(shuffd[i]==14)MUVE_Bp();

		if(shuffd[i]==15)MUVE_D();
		if(shuffd[i]==16){MUVE_D(); MUVE_D();}
		if(shuffd[i]==17)MUVE_Dp();
	}
}
function solve(){
	var solute = solutionMoves[index];
	for(var i=0; i<solute.length; i++){
		if(solute[i]==0)MUVE_U();
		if(solute[i]==1){MUVE_U(); MUVE_U();};
		if(solute[i]==2)MUVE_Up();

		if(solute[i]==9)MUVE_R();
		if(solute[i]==10){MUVE_R(); MUVE_R();}
		if(solute[i]==11)MUVE_Rp();

		if(solute[i]==3)MUVE_L();
		if(solute[i]==4){MUVE_L(); MUVE_L();}
		if(solute[i]==5)MUVE_Lp();

		if(solute[i]==6)MUVE_F();
		if(solute[i]==7){MUVE_F(); MUVE_F();}
		if(solute[i]==8)MUVE_Fp();

		if(solute[i]==12)MUVE_B();
		if(solute[i]==13){MUVE_B(); MUVE_B();}
		if(solute[i]==14)MUVE_Bp();

		if(solute[i]==15)MUVE_D();
		if(solute[i]==16){MUVE_D(); MUVE_D();}
		if(solute[i]==17)MUVE_Dp();
	}
	index==-1;
}

var staticY=-30;
var staticX=-35;

function rotateR(){
	document.getElementsByClassName("cube")[0].style.transform = " rotateX("+staticX+"deg) rotateY(-30deg) "
	staticY=-30;
}

function rotateU(){
	document.getElementsByClassName("cube")[0].style.transform = " rotateX(-35deg) rotateY("+staticY+"deg) ";
	staticX=-35;  
}

function statrtrotation(){
	rotateU();
	rotateR();
}
